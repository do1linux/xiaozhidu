name: Xiaozhi AI Music Service

on:
  workflow_dispatch:  # 手动触发
  push:
    branches: [ main ]
  schedule:
    # 每4小时运行一次，保持服务活跃
    - cron: '0 */4 * * *'

jobs:
  run-music-service:
    runs-on: ubuntu-latest
    timeout-minutes: 240  # 4小时，接近GitHub Actions限制
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install mcp fastmcp requests python-dotenv

    - name: Setup environment
      env:
        MCP_WSS_TOKEN: ${{ secrets.MCP_WSS_TOKEN }}
        MUSIC_API_KEY: ${{ secrets.MUSIC_API_KEY }}
      run: |
        echo "✅ 环境变量已设置"
        echo "MCP Token: ${MCP_WSS_TOKEN:0:10}..."
        if [ -n "$MUSIC_API_KEY" ]; then
          echo "🎵 音乐API密钥已配置"
        else
          echo "⚠️ 音乐API密钥未配置，部分功能可能受限"
        fi

    - name: Start Xiaozhi Music Service
      env:
        MCP_WSS_TOKEN: ${{ secrets.MCP_WSS_TOKEN }}
        MUSIC_API_KEY: ${{ secrets.MUSIC_API_KEY }}
      run: |
        echo "🚀 启动小智AI音乐服务..."
        echo "服务将运行3.5小时..."
        
        # 启动服务
        nohup python music_player_for_xiaozhi.py > xiaozhi_music.log 2>&1 &
        echo $! > service.pid
        
        echo "⏳ 等待服务启动..."
        sleep 10
        
        # 检查服务是否运行
        if ps -p $(cat service.pid) > /dev/null; then
          echo "✅ 音乐服务已启动并连接到小智AI"
          echo "=== 服务日志前20行 ==="
          head -20 xiaozhi_music.log
        else
          echo "❌ 服务启动失败"
          echo "=== 错误日志 ==="
          cat xiaozhi_music.log
          exit 1
        fi

    - name: Monitor Service
      env:
        MCP_WSS_TOKEN: ${{ secrets.MCP_WSS_TOKEN }}
        MUSIC_API_KEY: ${{ secrets.MUSIC_API_KEY }}
      run: |
        echo "📊 服务监控中..."
        echo "开始时间: $(date)"
        
        # 监控3.5小时
        for i in {1..210}; do
          echo "[$i/210] 服务运行中... $(date)"
          
          # 检查进程
          if ! ps -p $(cat service.pid) > /dev/null; then
            echo "❌ 服务进程已停止"
            echo "=== 最后日志 ==="
            tail -50 xiaozhi_music.log
            exit 1
          fi
          
          # 每分钟记录状态
          if [ $((i % 5)) -eq 0 ]; then
            echo "=== 最近日志 ==="
            tail -5 xiaozhi_music.log
          fi
          
          sleep 60
        done
        
        echo "⏰ 运行时间结束"

    - name: Stop Service
      if: always()
      run: |
        echo "🛑 停止服务..."
        if [ -f service.pid ]; then
          kill $(cat service.pid) 2>/dev/null || true
          rm -f service.pid
        fi
        echo "✅ 服务已停止"

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: xiaozhi-music-logs
        path: |
          xiaozhi_music.log
        retention-days: 7

    - name: Service Report
      if: always()
      run: |
        echo "📋 服务运行报告"
        echo "========================"
        if [ -f xiaozhi_music.log ]; then
          echo "📊 最后状态:"
          tail -10 xiaozhi_music.log | grep -E "(INFO|ERROR|CRITICAL)" || echo "无状态日志"
        else
          echo "❌ 无日志文件"
        fi
