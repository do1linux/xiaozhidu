name: Deploy MCP Music Player Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install System Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-ugly \
            gstreamer1.0-libav \
            libgirepository1.0-dev  # pygobject依赖

      - name: Upgrade Build Tools
        run: |
          pip install --upgrade pip setuptools wheel

      - name: Inject Environment Variables
        run: |
          echo "MCP_WSS_TOKEN=${{ secrets.MCP_WSS_TOKEN }}" >> $GITHUB_ENV
          echo "MUSIC_API_KEY=${{ secrets.MUSIC_API_KEY }}" >> $GITHUB_ENV

      - name: Install Python Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt --force-reinstall

      - name: Start MCP Service
        run: |
          # 后台运行并重定向所有输出
          nohup /opt/hostedtoolcache/Python/3.10.18/x64/bin/python music_player.py > music_player.log 2>&1 </dev/null &
          sleep 10
          if pgrep -f "python music_player.py" > /dev/null; then
            echo "✅ MCP服务已成功启动！"
            echo "service-status=running" >> $GITHUB_OUTPUT
          else
            echo "❌ MCP服务启动失败！"
            echo "service-status=failed" >> $GITHUB_OUTPUT
            tail -n 50 music_player.log  # 输出日志尾部
            exit 1
          fi

      - name: Upload Service Logs
        uses: actions/upload-artifact@v4
        with:
          name: music-player-logs
          path: music_player.log
          if-no-files-found: ignore
